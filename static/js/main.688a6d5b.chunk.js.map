{"version":3,"sources":["testSketch.js","App.js","reportWebVitals.js","index.js"],"names":["testSketch","p","rotation","setup","createCanvas","windowWidth","windowHeight","WEBGL","myCustomRedrawAccordingToNewPropsHandler","props","Math","PI","draw","background","normalMaterial","noStroke","push","rotateX","rotateY","box","pop","App","state","e","this","setState","target","value","sketch","type","min","max","step","onInput","rotationChange","bind","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OA4BeA,EA5BI,SAACC,GAChB,IAAIC,EAAW,EAGfD,EAAEE,MAAQ,WACRF,EAAEG,aAAaH,EAAEI,YAAaJ,EAAEK,aAAcL,EAAEM,QAIlDN,EAAEO,yCAA2C,SAACC,GACtCA,EAAMP,WACNA,EAAWO,EAAMP,SAAWQ,KAAKC,GAAK,MAK9CV,EAAEW,KAAO,WACLX,EAAEY,WAAW,KACbZ,EAAEa,iBACFb,EAAEc,WACFd,EAAEe,OACFf,EAAEgB,QAAQf,GACVD,EAAEiB,QAAQhB,GACVD,EAAEkB,IAAI,KACNlB,EAAEmB,QCQKC,G,wDAxBb,WAAYZ,GAAQ,IAAD,8BACjB,cAAMA,IACDa,MAAQ,CACXpB,SAAU,IAHK,E,2DAQJqB,GACbC,KAAKC,SAAS,CAACvB,SAASqB,EAAEG,OAAOC,U,+BAMjC,OACI,gCACE,cAAC,IAAD,CAAWC,OAAQ5B,EAAYE,SAAUsB,KAAKF,MAAMpB,WACpD,uBAAO2B,KAAK,QAAQF,MAAOH,KAAKF,MAAMpB,SAAW4B,IAAI,IAAKC,IAAI,MAAMC,KAAK,IAAIC,QAAST,KAAKU,eAAeC,KAAKX,e,GArBvGY,cCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.688a6d5b.chunk.js","sourcesContent":["const testSketch = (p) => {\n    let rotation = 0\n\n    //初期設定\n    p.setup = () => {\n      p.createCanvas(p.windowWidth, p.windowHeight, p.WEBGL)\n    }\n\n    //P5Wrapperコンポーネントからのpropsの受け渡し\n    p.myCustomRedrawAccordingToNewPropsHandler = (props) => {\n        if (props.rotation){\n            rotation = props.rotation * Math.PI / 180\n        }\n    }\n\n    //毎フレームごとの描画内容\n    p.draw = () => {\n        p.background(100)\n        p.normalMaterial()\n        p.noStroke()\n        p.push()\n        p.rotateX(rotation)\n        p.rotateY(rotation)\n        p.box(100)\n        p.pop()\n    }\n}\n\nexport default testSketch","import React, { Component } from 'react';\nimport P5Wrapper from 'react-p5-wrapper';\nimport testSketch from './testSketch';\nimport './App.css';\n\nclass App extends Component{\n\n  //初期値を45°に設定\n  constructor(props) {\n    super(props)\n    this.state = {\n      rotation: 45,\n    }\n  }\n\n  //バーの値が変化するごとに回転角を変更\n  rotationChange(e){\n    this.setState({rotation:e.target.value});\n  }\n\n  //コンポーネントの描画\n  //生成されるcanvasの下にバーを置く\n  render () {\n    return (\n        <div>\n          <P5Wrapper sketch={testSketch} rotation={this.state.rotation} />\n          <input type=\"range\" value={this.state.rotation}  min=\"0\"  max=\"360\" step=\"1\" onInput={this.rotationChange.bind(this)}/>\n        </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}